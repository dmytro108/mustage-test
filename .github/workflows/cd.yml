name: Continuous Delivery

on:
  push:
    branches:
    - main

permissions:
  contents: write

concurrency:
  group: cd-main
  cancel-in-progress: false

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/mustage-test

jobs:
  release_and_deploy:
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Derive release version
      id: version
      shell: bash
      run: |
        DATE=$(date -u +'%Y%m%d%H%M')
        echo "DATE=$DATE" >> "$GITHUB_ENV"
        echo "VERSION=v0.1.$DATE" >> "$GITHUB_ENV"
        echo "REL_TAG=rel_v0.1.$DATE" >> "$GITHUB_ENV"
        echo "version=v0.1.$DATE" >> "$GITHUB_OUTPUT"
        echo "rel_tag=rel_v0.1.$DATE" >> "$GITHUB_OUTPUT"

    - name: Create and push Git tag
      shell: bash
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git tag "${VERSION}"
        git push origin "${VERSION}"

    - name: Checkout release tag
      shell: bash
      run: |
        git checkout "${VERSION}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push image
      shell: bash
      run: |
        docker build -t "${IMAGE_NAME}:${REL_TAG}" .
        docker push "${IMAGE_NAME}:${REL_TAG}"

    - name: Deploy to Kubernetes (on-prem)
      shell: bash
      run: |
        set -euo pipefail
        echo "Patching image to ${IMAGE_NAME}:${REL_TAG}"
        sed -i "s|image: YOUR_DOCKER_REGISTRY/mustage-test:0.1.0|image: ${IMAGE_NAME}:${REL_TAG}|g" k8s/app.yml

        echo "Encoding Redis password from secret and patching Secret manifest"
        REDIS_PASSWORD_B64=$(echo -n "${{ secrets.REDIS_PASSWORD }}" | base64 -w 0)
        sed -i "s/REDIS_PASSWORD: \"\"/REDIS_PASSWORD: $REDIS_PASSWORD_B64/g" k8s/secret.yml

        echo "Applying Kubernetes manifests"
        kubectl apply -f k8s/secret.yml
        kubectl apply -f k8s/redis.yml
        kubectl apply -f k8s/app.yml

        echo "Waiting for rollouts"
        kubectl rollout status deployment/redis --timeout=120s || true
        kubectl rollout status deployment/nestjs-app --timeout=180s

        echo "Cluster state summary"
        kubectl get pods -o wide
        kubectl get svc
        kubectl get ingress
